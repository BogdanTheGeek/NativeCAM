(author : Fernand Veilleux)
o<turning> sub
(CALL [#begin_x] [#end_x] [#begin_z] [#end_z] [#finishing_passes] [radius])
;(print,#1, #2,#3,#4,#5)
	#<begin_x>          = #1
	#<end_x>            = #2
	#<begin_z>          = #3
	#<end_z>            = #4
	#<finishing_passes> = #5
	#<radius>           = #6
	
	o151 if [#<end_x> GT #<begin_x>]
		(debug,Turning: End X must be less than Begin X)
		(print,)
		(print,Turning: End X must be less than Begin X)
		(AXIS,notify,Turning: End X must be less than Begin X)
		o<turning> return
	o151 endif

	o01 if [#<_lathe_diameter_mode> EQ 1]
		#<roughcut>  = [#<_rough_cut> * 2]
		#<finishcut> = [#<_finish_cut> * 2]
		#<x_radius>  = [#<radius> * 2]
		#<b_x>       = [#<begin_x> * 2]
		#<e_x>       = [#<end_x> * 2]
	o01 else
		#<roughcut>  = #<_rough_cut>
		#<finishcut> = #<_finish_cut>
		#<x_radius>  = [#<radius>]
		#<b_x>       = [#<begin_x>]
		#<e_x>       = [#<end_x>]
	o01 endif

	o10 if [#<finishing_passes> GT 0]
		#<cut_rough_total> = [#<begin_x> - #<end_x> - #<finishcut>]
	o10 else
		#<cut_rough_total> = [#<begin_x> - #<end_x>]
	o10 endif

	#<rough_passes> = FUP[#<cut_rough_total> / #<roughcut>]
	o11 if [#<rough_passes> GT 0]
		#<each_cut> = [#<cut_rough_total> / #<rough_passes>]
	o11 elseif [#<rough_passes> LT 0]
;		o<turning> return
	o11 endif

	o30 if [#<begin_z> GT #<end_z>]
		#<comp> = 42
		#<z_factor> = 1
		#<dir> = 2
		o<in_list> CALL [#5413] [3] [0] [2] [9]
		o998 if [#<_in_list> EQ 0]
			(debug,Turning: Cutter orientation should be 2, 9 or None)
			(print,)
			(print,Turning: Cutter orientation should be 2, 9 or None)
			(AXIS,notify,Turning: Cutter orientation should be 2 or 9 or None)
;			o<turning> return
		o998 endif
	o30 else
		#<comp> = 41
		#<z_factor> = -1
		#<dir> = 3
		o<in_list> CALL [#5413] [3] [0] [1] [9]
		o999 if [#<_in_list> EQ 0]
			(debug,Turning: Cutter orientation should be 1, 9 or None)
			(print,)
			(print,Turning: Cutter orientation should be 1, 9 or None)
			(AXIS,notify,Turning: Cutter orientation should be 1 or 9 or None)
;			o<turning> return
		o999 endif
	o30 endif
	
	o40 if [[#5410 GT 0] AND [#<radius> GT [#5410 / 2]]]
		#<mode> = 1
		#<e_z> = [#<end_z> + #<radius> * #<z_factor>]
		/ G0 X#<end_x> Z#<begin_z>
		/ F10
		/ G1 Z#<e_z>
		/ G#<dir> X[#<end_x> + #<x_radius>] Z[#<end_z>] I#<radius>
		/ o41 if [[#<end_x> + #<x_radius>] LT #<begin_x>]
			/ G1 X#<begin_x>
		/ o41 endif
	o40 else
		#<comp> = 40 (cancel compensation)
		#<mode> = 0
		/ G0 X#<end_x> Z#<begin_z>
		/ F10
		/ G1 Z#<end_z>
		/ G1 X#<begin_x>
	o40 endif
	/ o<turning> return

	o51 if [#<_x> LT [#<begin_x> + #<_x_rapid>]]
		G0 X[#<begin_x> + #<_x_rapid>]
	o51 endif
	G#<comp>

	M#<_cooling_mode>
	
	o121 if [#<_tool_usage> LE 1]
		F#<_rough_feed>
		o60 if [#<mode> EQ 0] (no radius, no compensation)
			G0 X[#<begin_x> + #<_x_clear>]
			#<x> = [#<begin_x> - #<each_cut>]
			o12 repeat [#<rough_passes>]
				G0 Z#<begin_z>
				G0 X#<x>
				G1 Z#<end_z>
				G1 X[#<x> + #<_x_clear>]
				#<x> = [#<x> - #<each_cut>]
			o12 endrepeat
		o60 else
			G0 X[#<begin_x> + #<_x_clear>] Z[#<begin_z> + #<_z_clear> * #<z_factor>]
			#<x> = [#<begin_x> - #<each_cut>]
			o13 repeat [#<rough_passes>]
				G0 Z[#<begin_z> + #<_z_clear> * #<z_factor>]
				G0 X#<x>
				G0 Z[#<begin_z>]
				G1 Z#<e_z>
				G#<dir> X[#<x> + #<x_radius>] Z[#<end_z>] I#<radius>
				G1 X[#<x> + #<x_radius> + #<_x_clear>]
				#<x> = [#<x> - #<each_cut>]
			o13 endrepeat
		o60 endif
	o121 endif

	o20 if [#<finishing_passes> AND [#<_tool_usage> NE 1]]
		F#<_finish_feed>
		o70 if [#<mode> EQ 0] (no radius, no compensation)
			G0 X[#<end_x> + #<_x_clear>]
			o21 repeat [#<finishing_passes>]
				G0 Z#<begin_z>
				G0 X#<end_x>
				G1 Z#<end_z>
				G1 X[#<end_x> + #<_x_clear>]
			o21 endrepeat
		o70 else
			o22 repeat [#<finishing_passes>]
				G0 Z[#<begin_z> + #<_z_clear> * #<z_factor>]
				G0 X#<end_x>
				G0 Z[#<begin_z>]
				G1 Z#<e_z>
				G#<dir> X[#<end_x> + #<x_radius>] Z[#<end_z>] I#<radius>
				G1 X[#<end_x> + #<x_radius> + #<_x_clear>]
			o22 endrepeat
		o70 endif
	o20 endif
	
	M9 (cooling off)

	G0 Z[#<end_z> + #<_z_clear> * #<z_factor>]
	
	G40
	G0 X[#<_wp_dia_od> + #<_X_rapid>]
	
o<turning> endsub
