(author : Fernand Veilleux)
o<radius> sub
(CALL [#start_x] [#end_x] [#start_z] [#radius] [#fine_finish] [#dir])
	
	#<start_x>     = #1
	#<end_x>       = #2
	#<start_z>     = #3
	#<radius>      = #4
	#<fine_finish> = #5
	#<dir>         = #6
	#<tool_path>   = 1
	/ #<tool_path> = 0

	#<prev_mode> = #<_lathe_diameter_mode> (if g7 == diameter, must change to radius mode)
	G8

	o00 if [#<prev_mode> EQ 1] (correct for diameter mode)
		#<dm> = 0.5
	o00 else
		#<dm> = 1.0
	o00 endif
	
	o01 if [#<dir> EQ -1]
		#<p_dir> = 3
	o01 else
		#<p_dir> = 2
	o01 endif
	
	#<end_z> = [[#<start_z> - #<radius>] * #<dir>]
	o10 if [#<fine_finish> GT 0]
		#<cut_rough_total> = [#<radius> - #<_finish_cut>]
	o10 else
		#<cut_rough_total> = #<radius>
	o10 endif

	#<rough_pass> = FUP[#<cut_rough_total> / #<_rough_cut>]
	o11 if [#<rough_pass> GT 0]
		#<each_cut> = [#<cut_rough_total> / #<rough_pass>]
		F#<_rough_feed>
	o11 elseif [#<rough_pass> LT 0]
		o<radius> return
	o11 endif

	G41
	M#<_cooling_mode>

	G0 X[#<_wp_dia_od> * #<dm> + #<_x_rapid>]
	G0 Z[#<start_z> + [#<radius> + #<_z_clear>] * #<dir>]
	#<pass> = 0
	o12 while [#<pass> LT #<rough_pass>]
		#<pass> = [#<pass> + 1]
		#<z_offset> = [#<radius> - #<each_cut> * #<pass>]
		o121 if [[#<_tool_usage> LE 1] AND [#<tool_path> EQ 1]]
			G0 X[[#<start_x> + #5410 * 2.1] * #<dm>] Z[#<start_z> + [#<z_offset> + #5410 * 2.1] * #<dir> ]
			G0 X[#<start_x> * #<dm>] Z[#<start_z> + #<z_offset> * #<dir>]
			G#<p_dir> X[#<start_x> * #<dm> + #<radius>] Z[#<start_z> - #<each_cut> * #<pass> * #<dir>] I#<radius>
			o122 if [[#<start_x> * #<dm> + #<each_cut> * #<pass>] LT #<end_x>]
				G1 X[#<end_x> * #<dm>]
			o122 endif
			G91 G0 Z[#<_z_clear> * #<dir>]
			G90
		o121 endif
	o12 endwhile

	o20 if [#<fine_finish> AND [#<_tool_usage> NE 1] AND [#<tool_path> EQ 1]]
		F#<_finish_feed>
		o21 repeat [#<fine_finish>]
			G0 X[[#<start_x> + #<_x_clear>] * #<dm>] Z[#<start_z> + #<_z_clear> * #<dir>]
			G1 X[#<start_x> * #<dm>] Z#<start_z>
			G#<p_dir> X[#<start_x> * #<dm> + #<radius>] Z[#<start_z> - #<radius> * #<dir>] I[#<radius>]
			o22 if [[#<start_x> * #<dm> + #<radius>] LT #<end_x>]
				G1 X[#<end_x> * #<dm>]
			o22 endif
			G91 G0 Z[#<_z_clear> * #<dir>]
			G90
		o21 endrepeat
	o20 endif
	
	M9 (cooling off)
	G40
	
	/ G0 X[#<start_x> * #<dm>] Z#<start_z>
	/ G#<p_dir> X[#<start_x> * #<dm> + #<radius>] Z[#<start_z> - #<radius> * #<dir>] I[#<radius>]
	/ o30 if [[#<start_x> * #<dm> + #<radius>] LT #<end_x>]
	/	 G1 X[#<end_x> * #<dm>]
	/ o30 endif

	G0 X[#<_wp_dia_od> * #<dm> + #<_x_rapid>]
	
	G[8 - #<prev_mode>] (revert to previous mode)
o<radius> endsub
